// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEarnBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final LinearLayout bottomPopupCard;

  @NonNull
  public final LinearLayout carouselDotsContainer;

  @NonNull
  public final TextView claimButton1;

  @NonNull
  public final TextView claimButton2;

  @NonNull
  public final TextView claimButton3;

  @NonNull
  public final LinearLayout claimedJobsContainer;

  @NonNull
  public final LinearLayout dateTabs;

  @NonNull
  public final ImageView earnButton;

  @NonNull
  public final LinearLayout earnNav;

  @NonNull
  public final LinearLayout homeNav;

  @NonNull
  public final LinearLayout infoNav;

  @NonNull
  public final LinearLayout jobCard1;

  @NonNull
  public final LinearLayout jobCard2;

  @NonNull
  public final LinearLayout jobCard3;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final HorizontalScrollView multipleJobsScrollView;

  @NonNull
  public final TextView nextWeekTab;

  @NonNull
  public final TextView nowTab;

  @NonNull
  public final TextView ongoingJobTime;

  @NonNull
  public final TextView ongoingJobTitle;

  @NonNull
  public final LinearLayout postJobButton;

  @NonNull
  public final TextView referNowButton;

  @NonNull
  public final LinearLayout singleJobView;

  @NonNull
  public final LinearLayout tapriNav;

  @NonNull
  public final LinearLayout tipsNav;

  @NonNull
  public final TextView tomorrowTab;

  @NonNull
  public final LinearLayout topBar;

  @NonNull
  public final TextView viewJobButton;

  @NonNull
  public final TextView viewJobDetails1;

  @NonNull
  public final TextView viewJobDetails2;

  @NonNull
  public final TextView viewJobDetails3;

  private ActivityEarnBinding(@NonNull CoordinatorLayout rootView, @NonNull TextView backButton,
      @NonNull LinearLayout bottomPopupCard, @NonNull LinearLayout carouselDotsContainer,
      @NonNull TextView claimButton1, @NonNull TextView claimButton2,
      @NonNull TextView claimButton3, @NonNull LinearLayout claimedJobsContainer,
      @NonNull LinearLayout dateTabs, @NonNull ImageView earnButton, @NonNull LinearLayout earnNav,
      @NonNull LinearLayout homeNav, @NonNull LinearLayout infoNav, @NonNull LinearLayout jobCard1,
      @NonNull LinearLayout jobCard2, @NonNull LinearLayout jobCard3,
      @NonNull LinearLayout linearLayout2, @NonNull HorizontalScrollView multipleJobsScrollView,
      @NonNull TextView nextWeekTab, @NonNull TextView nowTab, @NonNull TextView ongoingJobTime,
      @NonNull TextView ongoingJobTitle, @NonNull LinearLayout postJobButton,
      @NonNull TextView referNowButton, @NonNull LinearLayout singleJobView,
      @NonNull LinearLayout tapriNav, @NonNull LinearLayout tipsNav, @NonNull TextView tomorrowTab,
      @NonNull LinearLayout topBar, @NonNull TextView viewJobButton,
      @NonNull TextView viewJobDetails1, @NonNull TextView viewJobDetails2,
      @NonNull TextView viewJobDetails3) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bottomPopupCard = bottomPopupCard;
    this.carouselDotsContainer = carouselDotsContainer;
    this.claimButton1 = claimButton1;
    this.claimButton2 = claimButton2;
    this.claimButton3 = claimButton3;
    this.claimedJobsContainer = claimedJobsContainer;
    this.dateTabs = dateTabs;
    this.earnButton = earnButton;
    this.earnNav = earnNav;
    this.homeNav = homeNav;
    this.infoNav = infoNav;
    this.jobCard1 = jobCard1;
    this.jobCard2 = jobCard2;
    this.jobCard3 = jobCard3;
    this.linearLayout2 = linearLayout2;
    this.multipleJobsScrollView = multipleJobsScrollView;
    this.nextWeekTab = nextWeekTab;
    this.nowTab = nowTab;
    this.ongoingJobTime = ongoingJobTime;
    this.ongoingJobTitle = ongoingJobTitle;
    this.postJobButton = postJobButton;
    this.referNowButton = referNowButton;
    this.singleJobView = singleJobView;
    this.tapriNav = tapriNav;
    this.tipsNav = tipsNav;
    this.tomorrowTab = tomorrowTab;
    this.topBar = topBar;
    this.viewJobButton = viewJobButton;
    this.viewJobDetails1 = viewJobDetails1;
    this.viewJobDetails2 = viewJobDetails2;
    this.viewJobDetails3 = viewJobDetails3;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEarnBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEarnBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_earn, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEarnBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bottomPopupCard;
      LinearLayout bottomPopupCard = ViewBindings.findChildViewById(rootView, id);
      if (bottomPopupCard == null) {
        break missingId;
      }

      id = R.id.carouselDotsContainer;
      LinearLayout carouselDotsContainer = ViewBindings.findChildViewById(rootView, id);
      if (carouselDotsContainer == null) {
        break missingId;
      }

      id = R.id.claimButton1;
      TextView claimButton1 = ViewBindings.findChildViewById(rootView, id);
      if (claimButton1 == null) {
        break missingId;
      }

      id = R.id.claimButton2;
      TextView claimButton2 = ViewBindings.findChildViewById(rootView, id);
      if (claimButton2 == null) {
        break missingId;
      }

      id = R.id.claimButton3;
      TextView claimButton3 = ViewBindings.findChildViewById(rootView, id);
      if (claimButton3 == null) {
        break missingId;
      }

      id = R.id.claimedJobsContainer;
      LinearLayout claimedJobsContainer = ViewBindings.findChildViewById(rootView, id);
      if (claimedJobsContainer == null) {
        break missingId;
      }

      id = R.id.dateTabs;
      LinearLayout dateTabs = ViewBindings.findChildViewById(rootView, id);
      if (dateTabs == null) {
        break missingId;
      }

      id = R.id.earnButton;
      ImageView earnButton = ViewBindings.findChildViewById(rootView, id);
      if (earnButton == null) {
        break missingId;
      }

      id = R.id.earnNav;
      LinearLayout earnNav = ViewBindings.findChildViewById(rootView, id);
      if (earnNav == null) {
        break missingId;
      }

      id = R.id.homeNav;
      LinearLayout homeNav = ViewBindings.findChildViewById(rootView, id);
      if (homeNav == null) {
        break missingId;
      }

      id = R.id.infoNav;
      LinearLayout infoNav = ViewBindings.findChildViewById(rootView, id);
      if (infoNav == null) {
        break missingId;
      }

      id = R.id.jobCard1;
      LinearLayout jobCard1 = ViewBindings.findChildViewById(rootView, id);
      if (jobCard1 == null) {
        break missingId;
      }

      id = R.id.jobCard2;
      LinearLayout jobCard2 = ViewBindings.findChildViewById(rootView, id);
      if (jobCard2 == null) {
        break missingId;
      }

      id = R.id.jobCard3;
      LinearLayout jobCard3 = ViewBindings.findChildViewById(rootView, id);
      if (jobCard3 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.multipleJobsScrollView;
      HorizontalScrollView multipleJobsScrollView = ViewBindings.findChildViewById(rootView, id);
      if (multipleJobsScrollView == null) {
        break missingId;
      }

      id = R.id.nextWeekTab;
      TextView nextWeekTab = ViewBindings.findChildViewById(rootView, id);
      if (nextWeekTab == null) {
        break missingId;
      }

      id = R.id.nowTab;
      TextView nowTab = ViewBindings.findChildViewById(rootView, id);
      if (nowTab == null) {
        break missingId;
      }

      id = R.id.ongoingJobTime;
      TextView ongoingJobTime = ViewBindings.findChildViewById(rootView, id);
      if (ongoingJobTime == null) {
        break missingId;
      }

      id = R.id.ongoingJobTitle;
      TextView ongoingJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (ongoingJobTitle == null) {
        break missingId;
      }

      id = R.id.postJobButton;
      LinearLayout postJobButton = ViewBindings.findChildViewById(rootView, id);
      if (postJobButton == null) {
        break missingId;
      }

      id = R.id.referNowButton;
      TextView referNowButton = ViewBindings.findChildViewById(rootView, id);
      if (referNowButton == null) {
        break missingId;
      }

      id = R.id.singleJobView;
      LinearLayout singleJobView = ViewBindings.findChildViewById(rootView, id);
      if (singleJobView == null) {
        break missingId;
      }

      id = R.id.tapriNav;
      LinearLayout tapriNav = ViewBindings.findChildViewById(rootView, id);
      if (tapriNav == null) {
        break missingId;
      }

      id = R.id.tipsNav;
      LinearLayout tipsNav = ViewBindings.findChildViewById(rootView, id);
      if (tipsNav == null) {
        break missingId;
      }

      id = R.id.tomorrowTab;
      TextView tomorrowTab = ViewBindings.findChildViewById(rootView, id);
      if (tomorrowTab == null) {
        break missingId;
      }

      id = R.id.topBar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.viewJobButton;
      TextView viewJobButton = ViewBindings.findChildViewById(rootView, id);
      if (viewJobButton == null) {
        break missingId;
      }

      id = R.id.viewJobDetails1;
      TextView viewJobDetails1 = ViewBindings.findChildViewById(rootView, id);
      if (viewJobDetails1 == null) {
        break missingId;
      }

      id = R.id.viewJobDetails2;
      TextView viewJobDetails2 = ViewBindings.findChildViewById(rootView, id);
      if (viewJobDetails2 == null) {
        break missingId;
      }

      id = R.id.viewJobDetails3;
      TextView viewJobDetails3 = ViewBindings.findChildViewById(rootView, id);
      if (viewJobDetails3 == null) {
        break missingId;
      }

      return new ActivityEarnBinding((CoordinatorLayout) rootView, backButton, bottomPopupCard,
          carouselDotsContainer, claimButton1, claimButton2, claimButton3, claimedJobsContainer,
          dateTabs, earnButton, earnNav, homeNav, infoNav, jobCard1, jobCard2, jobCard3,
          linearLayout2, multipleJobsScrollView, nextWeekTab, nowTab, ongoingJobTime,
          ongoingJobTitle, postJobButton, referNowButton, singleJobView, tapriNav, tipsNav,
          tomorrowTab, topBar, viewJobButton, viewJobDetails1, viewJobDetails2, viewJobDetails3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
