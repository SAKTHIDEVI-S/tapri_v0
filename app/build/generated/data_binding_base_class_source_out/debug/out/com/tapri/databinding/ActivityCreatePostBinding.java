// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreatePostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout askHelpCard;

  @NonNull
  public final LinearLayout audienceDropdown;

  @NonNull
  public final TextView audienceText;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final EditText contentInput;

  @NonNull
  public final TextView postButton;

  @NonNull
  public final LinearLayout shareTipCard;

  @NonNull
  public final LinearLayout trafficAlertCard;

  private ActivityCreatePostBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout askHelpCard, @NonNull LinearLayout audienceDropdown,
      @NonNull TextView audienceText, @NonNull TextView backButton, @NonNull EditText contentInput,
      @NonNull TextView postButton, @NonNull LinearLayout shareTipCard,
      @NonNull LinearLayout trafficAlertCard) {
    this.rootView = rootView;
    this.askHelpCard = askHelpCard;
    this.audienceDropdown = audienceDropdown;
    this.audienceText = audienceText;
    this.backButton = backButton;
    this.contentInput = contentInput;
    this.postButton = postButton;
    this.shareTipCard = shareTipCard;
    this.trafficAlertCard = trafficAlertCard;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreatePostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreatePostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreatePostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.askHelpCard;
      LinearLayout askHelpCard = ViewBindings.findChildViewById(rootView, id);
      if (askHelpCard == null) {
        break missingId;
      }

      id = R.id.audienceDropdown;
      LinearLayout audienceDropdown = ViewBindings.findChildViewById(rootView, id);
      if (audienceDropdown == null) {
        break missingId;
      }

      id = R.id.audienceText;
      TextView audienceText = ViewBindings.findChildViewById(rootView, id);
      if (audienceText == null) {
        break missingId;
      }

      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.contentInput;
      EditText contentInput = ViewBindings.findChildViewById(rootView, id);
      if (contentInput == null) {
        break missingId;
      }

      id = R.id.postButton;
      TextView postButton = ViewBindings.findChildViewById(rootView, id);
      if (postButton == null) {
        break missingId;
      }

      id = R.id.shareTipCard;
      LinearLayout shareTipCard = ViewBindings.findChildViewById(rootView, id);
      if (shareTipCard == null) {
        break missingId;
      }

      id = R.id.trafficAlertCard;
      LinearLayout trafficAlertCard = ViewBindings.findChildViewById(rootView, id);
      if (trafficAlertCard == null) {
        break missingId;
      }

      return new ActivityCreatePostBinding((LinearLayout) rootView, askHelpCard, audienceDropdown,
          audienceText, backButton, contentInput, postButton, shareTipCard, trafficAlertCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
