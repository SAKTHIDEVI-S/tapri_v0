// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTipsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView allTab;

  @NonNull
  public final LinearLayout allTipCard1;

  @NonNull
  public final LinearLayout allTipCard2;

  @NonNull
  public final LinearLayout allTipsContainer;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final LinearLayout bottomNav;

  @NonNull
  public final ImageView earnButton;

  @NonNull
  public final LinearLayout earnNav;

  @NonNull
  public final TextView earningsTab;

  @NonNull
  public final TextView fuelTab;

  @NonNull
  public final LinearLayout fuelTipCard1;

  @NonNull
  public final LinearLayout fuelTipCard2;

  @NonNull
  public final LinearLayout fuelTipCard3;

  @NonNull
  public final LinearLayout fuelTipsContainer;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final LinearLayout homeNav;

  @NonNull
  public final LinearLayout infoNav;

  @NonNull
  public final TextView safetyTab;

  @NonNull
  public final HorizontalScrollView tabsScrollView;

  @NonNull
  public final LinearLayout tapriNav;

  @NonNull
  public final LinearLayout tipsContainer;

  @NonNull
  public final LinearLayout tipsNav;

  @NonNull
  public final TextView titleText;

  private ActivityTipsBinding(@NonNull CoordinatorLayout rootView, @NonNull TextView allTab,
      @NonNull LinearLayout allTipCard1, @NonNull LinearLayout allTipCard2,
      @NonNull LinearLayout allTipsContainer, @NonNull TextView backButton,
      @NonNull LinearLayout bottomNav, @NonNull ImageView earnButton, @NonNull LinearLayout earnNav,
      @NonNull TextView earningsTab, @NonNull TextView fuelTab, @NonNull LinearLayout fuelTipCard1,
      @NonNull LinearLayout fuelTipCard2, @NonNull LinearLayout fuelTipCard3,
      @NonNull LinearLayout fuelTipsContainer, @NonNull LinearLayout header,
      @NonNull LinearLayout homeNav, @NonNull LinearLayout infoNav, @NonNull TextView safetyTab,
      @NonNull HorizontalScrollView tabsScrollView, @NonNull LinearLayout tapriNav,
      @NonNull LinearLayout tipsContainer, @NonNull LinearLayout tipsNav,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.allTab = allTab;
    this.allTipCard1 = allTipCard1;
    this.allTipCard2 = allTipCard2;
    this.allTipsContainer = allTipsContainer;
    this.backButton = backButton;
    this.bottomNav = bottomNav;
    this.earnButton = earnButton;
    this.earnNav = earnNav;
    this.earningsTab = earningsTab;
    this.fuelTab = fuelTab;
    this.fuelTipCard1 = fuelTipCard1;
    this.fuelTipCard2 = fuelTipCard2;
    this.fuelTipCard3 = fuelTipCard3;
    this.fuelTipsContainer = fuelTipsContainer;
    this.header = header;
    this.homeNav = homeNav;
    this.infoNav = infoNav;
    this.safetyTab = safetyTab;
    this.tabsScrollView = tabsScrollView;
    this.tapriNav = tapriNav;
    this.tipsContainer = tipsContainer;
    this.tipsNav = tipsNav;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTipsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTipsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tips, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTipsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allTab;
      TextView allTab = ViewBindings.findChildViewById(rootView, id);
      if (allTab == null) {
        break missingId;
      }

      id = R.id.allTipCard1;
      LinearLayout allTipCard1 = ViewBindings.findChildViewById(rootView, id);
      if (allTipCard1 == null) {
        break missingId;
      }

      id = R.id.allTipCard2;
      LinearLayout allTipCard2 = ViewBindings.findChildViewById(rootView, id);
      if (allTipCard2 == null) {
        break missingId;
      }

      id = R.id.allTipsContainer;
      LinearLayout allTipsContainer = ViewBindings.findChildViewById(rootView, id);
      if (allTipsContainer == null) {
        break missingId;
      }

      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bottomNav;
      LinearLayout bottomNav = ViewBindings.findChildViewById(rootView, id);
      if (bottomNav == null) {
        break missingId;
      }

      id = R.id.earnButton;
      ImageView earnButton = ViewBindings.findChildViewById(rootView, id);
      if (earnButton == null) {
        break missingId;
      }

      id = R.id.earnNav;
      LinearLayout earnNav = ViewBindings.findChildViewById(rootView, id);
      if (earnNav == null) {
        break missingId;
      }

      id = R.id.earningsTab;
      TextView earningsTab = ViewBindings.findChildViewById(rootView, id);
      if (earningsTab == null) {
        break missingId;
      }

      id = R.id.fuelTab;
      TextView fuelTab = ViewBindings.findChildViewById(rootView, id);
      if (fuelTab == null) {
        break missingId;
      }

      id = R.id.fuelTipCard1;
      LinearLayout fuelTipCard1 = ViewBindings.findChildViewById(rootView, id);
      if (fuelTipCard1 == null) {
        break missingId;
      }

      id = R.id.fuelTipCard2;
      LinearLayout fuelTipCard2 = ViewBindings.findChildViewById(rootView, id);
      if (fuelTipCard2 == null) {
        break missingId;
      }

      id = R.id.fuelTipCard3;
      LinearLayout fuelTipCard3 = ViewBindings.findChildViewById(rootView, id);
      if (fuelTipCard3 == null) {
        break missingId;
      }

      id = R.id.fuelTipsContainer;
      LinearLayout fuelTipsContainer = ViewBindings.findChildViewById(rootView, id);
      if (fuelTipsContainer == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.homeNav;
      LinearLayout homeNav = ViewBindings.findChildViewById(rootView, id);
      if (homeNav == null) {
        break missingId;
      }

      id = R.id.infoNav;
      LinearLayout infoNav = ViewBindings.findChildViewById(rootView, id);
      if (infoNav == null) {
        break missingId;
      }

      id = R.id.safetyTab;
      TextView safetyTab = ViewBindings.findChildViewById(rootView, id);
      if (safetyTab == null) {
        break missingId;
      }

      id = R.id.tabsScrollView;
      HorizontalScrollView tabsScrollView = ViewBindings.findChildViewById(rootView, id);
      if (tabsScrollView == null) {
        break missingId;
      }

      id = R.id.tapriNav;
      LinearLayout tapriNav = ViewBindings.findChildViewById(rootView, id);
      if (tapriNav == null) {
        break missingId;
      }

      id = R.id.tipsContainer;
      LinearLayout tipsContainer = ViewBindings.findChildViewById(rootView, id);
      if (tipsContainer == null) {
        break missingId;
      }

      id = R.id.tipsNav;
      LinearLayout tipsNav = ViewBindings.findChildViewById(rootView, id);
      if (tipsNav == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityTipsBinding((CoordinatorLayout) rootView, allTab, allTipCard1, allTipCard2,
          allTipsContainer, backButton, bottomNav, earnButton, earnNav, earningsTab, fuelTab,
          fuelTipCard1, fuelTipCard2, fuelTipCard3, fuelTipsContainer, header, homeNav, infoNav,
          safetyTab, tabsScrollView, tapriNav, tipsContainer, tipsNav, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
