// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostJobBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final EditText contactInput;

  @NonNull
  public final EditText durationInput;

  @NonNull
  public final EditText hourlyRateInput;

  @NonNull
  public final EditText jobDescriptionInput;

  @NonNull
  public final EditText jobTitleInput;

  @NonNull
  public final Spinner jobTypeSpinner;

  @NonNull
  public final EditText locationInput;

  @NonNull
  public final TextView postJobButton;

  @NonNull
  public final EditText requirementsInput;

  private ActivityPostJobBinding(@NonNull LinearLayout rootView, @NonNull TextView backButton,
      @NonNull EditText contactInput, @NonNull EditText durationInput,
      @NonNull EditText hourlyRateInput, @NonNull EditText jobDescriptionInput,
      @NonNull EditText jobTitleInput, @NonNull Spinner jobTypeSpinner,
      @NonNull EditText locationInput, @NonNull TextView postJobButton,
      @NonNull EditText requirementsInput) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.contactInput = contactInput;
    this.durationInput = durationInput;
    this.hourlyRateInput = hourlyRateInput;
    this.jobDescriptionInput = jobDescriptionInput;
    this.jobTitleInput = jobTitleInput;
    this.jobTypeSpinner = jobTypeSpinner;
    this.locationInput = locationInput;
    this.postJobButton = postJobButton;
    this.requirementsInput = requirementsInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostJobBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostJobBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_job, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostJobBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.contactInput;
      EditText contactInput = ViewBindings.findChildViewById(rootView, id);
      if (contactInput == null) {
        break missingId;
      }

      id = R.id.durationInput;
      EditText durationInput = ViewBindings.findChildViewById(rootView, id);
      if (durationInput == null) {
        break missingId;
      }

      id = R.id.hourlyRateInput;
      EditText hourlyRateInput = ViewBindings.findChildViewById(rootView, id);
      if (hourlyRateInput == null) {
        break missingId;
      }

      id = R.id.jobDescriptionInput;
      EditText jobDescriptionInput = ViewBindings.findChildViewById(rootView, id);
      if (jobDescriptionInput == null) {
        break missingId;
      }

      id = R.id.jobTitleInput;
      EditText jobTitleInput = ViewBindings.findChildViewById(rootView, id);
      if (jobTitleInput == null) {
        break missingId;
      }

      id = R.id.jobTypeSpinner;
      Spinner jobTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (jobTypeSpinner == null) {
        break missingId;
      }

      id = R.id.locationInput;
      EditText locationInput = ViewBindings.findChildViewById(rootView, id);
      if (locationInput == null) {
        break missingId;
      }

      id = R.id.postJobButton;
      TextView postJobButton = ViewBindings.findChildViewById(rootView, id);
      if (postJobButton == null) {
        break missingId;
      }

      id = R.id.requirementsInput;
      EditText requirementsInput = ViewBindings.findChildViewById(rootView, id);
      if (requirementsInput == null) {
        break missingId;
      }

      return new ActivityPostJobBinding((LinearLayout) rootView, backButton, contactInput,
          durationInput, hourlyRateInput, jobDescriptionInput, jobTitleInput, jobTypeSpinner,
          locationInput, postJobButton, requirementsInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
