// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPostBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout commentButton;

  @NonNull
  public final TextView commentCount;

  @NonNull
  public final ImageView commentIcon;

  @NonNull
  public final LinearLayout likeButton;

  @NonNull
  public final TextView likeCount;

  @NonNull
  public final ImageView likeIcon;

  @NonNull
  public final ImageView moreOptions;

  @NonNull
  public final TextView postCaption;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final TextView postTime;

  @NonNull
  public final LinearLayout saveButton;

  @NonNull
  public final ImageView saveIcon;

  @NonNull
  public final LinearLayout shareButton;

  @NonNull
  public final TextView shareCount;

  @NonNull
  public final ImageView shareIcon;

  @NonNull
  public final ImageView userAvatar;

  @NonNull
  public final TextView userName;

  private ItemPostBinding(@NonNull CardView rootView, @NonNull LinearLayout commentButton,
      @NonNull TextView commentCount, @NonNull ImageView commentIcon,
      @NonNull LinearLayout likeButton, @NonNull TextView likeCount, @NonNull ImageView likeIcon,
      @NonNull ImageView moreOptions, @NonNull TextView postCaption, @NonNull ImageView postImage,
      @NonNull TextView postTime, @NonNull LinearLayout saveButton, @NonNull ImageView saveIcon,
      @NonNull LinearLayout shareButton, @NonNull TextView shareCount, @NonNull ImageView shareIcon,
      @NonNull ImageView userAvatar, @NonNull TextView userName) {
    this.rootView = rootView;
    this.commentButton = commentButton;
    this.commentCount = commentCount;
    this.commentIcon = commentIcon;
    this.likeButton = likeButton;
    this.likeCount = likeCount;
    this.likeIcon = likeIcon;
    this.moreOptions = moreOptions;
    this.postCaption = postCaption;
    this.postImage = postImage;
    this.postTime = postTime;
    this.saveButton = saveButton;
    this.saveIcon = saveIcon;
    this.shareButton = shareButton;
    this.shareCount = shareCount;
    this.shareIcon = shareIcon;
    this.userAvatar = userAvatar;
    this.userName = userName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commentButton;
      LinearLayout commentButton = ViewBindings.findChildViewById(rootView, id);
      if (commentButton == null) {
        break missingId;
      }

      id = R.id.commentCount;
      TextView commentCount = ViewBindings.findChildViewById(rootView, id);
      if (commentCount == null) {
        break missingId;
      }

      id = R.id.commentIcon;
      ImageView commentIcon = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon == null) {
        break missingId;
      }

      id = R.id.likeButton;
      LinearLayout likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.likeCount;
      TextView likeCount = ViewBindings.findChildViewById(rootView, id);
      if (likeCount == null) {
        break missingId;
      }

      id = R.id.likeIcon;
      ImageView likeIcon = ViewBindings.findChildViewById(rootView, id);
      if (likeIcon == null) {
        break missingId;
      }

      id = R.id.moreOptions;
      ImageView moreOptions = ViewBindings.findChildViewById(rootView, id);
      if (moreOptions == null) {
        break missingId;
      }

      id = R.id.postCaption;
      TextView postCaption = ViewBindings.findChildViewById(rootView, id);
      if (postCaption == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.postTime;
      TextView postTime = ViewBindings.findChildViewById(rootView, id);
      if (postTime == null) {
        break missingId;
      }

      id = R.id.saveButton;
      LinearLayout saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.saveIcon;
      ImageView saveIcon = ViewBindings.findChildViewById(rootView, id);
      if (saveIcon == null) {
        break missingId;
      }

      id = R.id.shareButton;
      LinearLayout shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.shareCount;
      TextView shareCount = ViewBindings.findChildViewById(rootView, id);
      if (shareCount == null) {
        break missingId;
      }

      id = R.id.shareIcon;
      ImageView shareIcon = ViewBindings.findChildViewById(rootView, id);
      if (shareIcon == null) {
        break missingId;
      }

      id = R.id.userAvatar;
      ImageView userAvatar = ViewBindings.findChildViewById(rootView, id);
      if (userAvatar == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ItemPostBinding((CardView) rootView, commentButton, commentCount, commentIcon,
          likeButton, likeCount, likeIcon, moreOptions, postCaption, postImage, postTime,
          saveButton, saveIcon, shareButton, shareCount, shareIcon, userAvatar, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
