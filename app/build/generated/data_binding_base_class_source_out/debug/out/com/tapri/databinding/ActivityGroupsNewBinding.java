// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupsNewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final LinearLayout bottomNavigation;

  @NonNull
  public final LinearLayout createPostButton;

  @NonNull
  public final ImageView earnButton;

  @NonNull
  public final LinearLayout earnNav;

  @NonNull
  public final TextView emptyMessageView;

  @NonNull
  public final LinearLayout emptyStateView;

  @NonNull
  public final TextView errorMessageView;

  @NonNull
  public final LinearLayout exploreMoreButton;

  @NonNull
  public final RecyclerView groupsRecyclerView;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final LinearLayout homeNav;

  @NonNull
  public final LinearLayout infoNav;

  @NonNull
  public final ImageView loadingGifView;

  @NonNull
  public final ImageView newGroupButton;

  @NonNull
  public final TextView retryButton;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final LinearLayout tapriNav;

  @NonNull
  public final LinearLayout tipsNav;

  private ActivityGroupsNewBinding(@NonNull ConstraintLayout rootView, @NonNull TextView backButton,
      @NonNull LinearLayout bottomNavigation, @NonNull LinearLayout createPostButton,
      @NonNull ImageView earnButton, @NonNull LinearLayout earnNav,
      @NonNull TextView emptyMessageView, @NonNull LinearLayout emptyStateView,
      @NonNull TextView errorMessageView, @NonNull LinearLayout exploreMoreButton,
      @NonNull RecyclerView groupsRecyclerView, @NonNull LinearLayout header,
      @NonNull LinearLayout homeNav, @NonNull LinearLayout infoNav,
      @NonNull ImageView loadingGifView, @NonNull ImageView newGroupButton,
      @NonNull TextView retryButton, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull LinearLayout tapriNav, @NonNull LinearLayout tipsNav) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bottomNavigation = bottomNavigation;
    this.createPostButton = createPostButton;
    this.earnButton = earnButton;
    this.earnNav = earnNav;
    this.emptyMessageView = emptyMessageView;
    this.emptyStateView = emptyStateView;
    this.errorMessageView = errorMessageView;
    this.exploreMoreButton = exploreMoreButton;
    this.groupsRecyclerView = groupsRecyclerView;
    this.header = header;
    this.homeNav = homeNav;
    this.infoNav = infoNav;
    this.loadingGifView = loadingGifView;
    this.newGroupButton = newGroupButton;
    this.retryButton = retryButton;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.tapriNav = tapriNav;
    this.tipsNav = tipsNav;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupsNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupsNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_groups_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupsNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      LinearLayout bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.createPostButton;
      LinearLayout createPostButton = ViewBindings.findChildViewById(rootView, id);
      if (createPostButton == null) {
        break missingId;
      }

      id = R.id.earnButton;
      ImageView earnButton = ViewBindings.findChildViewById(rootView, id);
      if (earnButton == null) {
        break missingId;
      }

      id = R.id.earnNav;
      LinearLayout earnNav = ViewBindings.findChildViewById(rootView, id);
      if (earnNav == null) {
        break missingId;
      }

      id = R.id.emptyMessageView;
      TextView emptyMessageView = ViewBindings.findChildViewById(rootView, id);
      if (emptyMessageView == null) {
        break missingId;
      }

      id = R.id.emptyStateView;
      LinearLayout emptyStateView = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateView == null) {
        break missingId;
      }

      id = R.id.errorMessageView;
      TextView errorMessageView = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageView == null) {
        break missingId;
      }

      id = R.id.exploreMoreButton;
      LinearLayout exploreMoreButton = ViewBindings.findChildViewById(rootView, id);
      if (exploreMoreButton == null) {
        break missingId;
      }

      id = R.id.groupsRecyclerView;
      RecyclerView groupsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (groupsRecyclerView == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.homeNav;
      LinearLayout homeNav = ViewBindings.findChildViewById(rootView, id);
      if (homeNav == null) {
        break missingId;
      }

      id = R.id.infoNav;
      LinearLayout infoNav = ViewBindings.findChildViewById(rootView, id);
      if (infoNav == null) {
        break missingId;
      }

      id = R.id.loadingGifView;
      ImageView loadingGifView = ViewBindings.findChildViewById(rootView, id);
      if (loadingGifView == null) {
        break missingId;
      }

      id = R.id.newGroupButton;
      ImageView newGroupButton = ViewBindings.findChildViewById(rootView, id);
      if (newGroupButton == null) {
        break missingId;
      }

      id = R.id.retryButton;
      TextView retryButton = ViewBindings.findChildViewById(rootView, id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.tapriNav;
      LinearLayout tapriNav = ViewBindings.findChildViewById(rootView, id);
      if (tapriNav == null) {
        break missingId;
      }

      id = R.id.tipsNav;
      LinearLayout tipsNav = ViewBindings.findChildViewById(rootView, id);
      if (tipsNav == null) {
        break missingId;
      }

      return new ActivityGroupsNewBinding((ConstraintLayout) rootView, backButton, bottomNavigation,
          createPostButton, earnButton, earnNav, emptyMessageView, emptyStateView, errorMessageView,
          exploreMoreButton, groupsRecyclerView, header, homeNav, infoNav, loadingGifView,
          newGroupButton, retryButton, swipeRefreshLayout, tapriNav, tipsNav);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
