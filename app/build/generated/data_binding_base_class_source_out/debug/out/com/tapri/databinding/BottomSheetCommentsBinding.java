// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetCommentsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView commentCount;

  @NonNull
  public final EditText commentInput;

  @NonNull
  public final RecyclerView commentsRecyclerView;

  @NonNull
  public final ImageView sendCommentButton;

  private BottomSheetCommentsBinding(@NonNull LinearLayout rootView, @NonNull TextView commentCount,
      @NonNull EditText commentInput, @NonNull RecyclerView commentsRecyclerView,
      @NonNull ImageView sendCommentButton) {
    this.rootView = rootView;
    this.commentCount = commentCount;
    this.commentInput = commentInput;
    this.commentsRecyclerView = commentsRecyclerView;
    this.sendCommentButton = sendCommentButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetCommentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetCommentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_comments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetCommentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commentCount;
      TextView commentCount = ViewBindings.findChildViewById(rootView, id);
      if (commentCount == null) {
        break missingId;
      }

      id = R.id.commentInput;
      EditText commentInput = ViewBindings.findChildViewById(rootView, id);
      if (commentInput == null) {
        break missingId;
      }

      id = R.id.commentsRecyclerView;
      RecyclerView commentsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (commentsRecyclerView == null) {
        break missingId;
      }

      id = R.id.sendCommentButton;
      ImageView sendCommentButton = ViewBindings.findChildViewById(rootView, id);
      if (sendCommentButton == null) {
        break missingId;
      }

      return new BottomSheetCommentsBinding((LinearLayout) rootView, commentCount, commentInput,
          commentsRecyclerView, sendCommentButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
