// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhotoCropperBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final TextView cancelButton;

  @NonNull
  public final TextView cropButton;

  @NonNull
  public final View cropFrame;

  @NonNull
  public final View cropOverlay;

  @NonNull
  public final ImageView imageView;

  private ActivityPhotoCropperBinding(@NonNull LinearLayout rootView, @NonNull TextView backButton,
      @NonNull TextView cancelButton, @NonNull TextView cropButton, @NonNull View cropFrame,
      @NonNull View cropOverlay, @NonNull ImageView imageView) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.cancelButton = cancelButton;
    this.cropButton = cropButton;
    this.cropFrame = cropFrame;
    this.cropOverlay = cropOverlay;
    this.imageView = imageView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhotoCropperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhotoCropperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_photo_cropper, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhotoCropperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      TextView cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.cropButton;
      TextView cropButton = ViewBindings.findChildViewById(rootView, id);
      if (cropButton == null) {
        break missingId;
      }

      id = R.id.cropFrame;
      View cropFrame = ViewBindings.findChildViewById(rootView, id);
      if (cropFrame == null) {
        break missingId;
      }

      id = R.id.cropOverlay;
      View cropOverlay = ViewBindings.findChildViewById(rootView, id);
      if (cropOverlay == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      return new ActivityPhotoCropperBinding((LinearLayout) rootView, backButton, cancelButton,
          cropButton, cropFrame, cropOverlay, imageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
