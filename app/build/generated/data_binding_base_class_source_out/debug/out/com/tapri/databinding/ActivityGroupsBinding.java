// Generated by view binder compiler. Do not edit!
package com.tapri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tapri.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView backButton;

  @NonNull
  public final LinearLayout createGroupButton;

  @NonNull
  public final RecyclerView discoverGroupsRecyclerView;

  @NonNull
  public final ImageView earnButton;

  @NonNull
  public final LinearLayout earnNav;

  @NonNull
  public final TextView emptyMessageView;

  @NonNull
  public final LinearLayout emptyStateView;

  @NonNull
  public final TextView errorMessageView;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final LinearLayout homeNav;

  @NonNull
  public final LinearLayout infoNav;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final ImageView loadingGifView;

  @NonNull
  public final RecyclerView myGroupsRecyclerView;

  @NonNull
  public final TextView retryButton;

  @NonNull
  public final ImageView searchButton;

  @NonNull
  public final TextView seeAllDiscoverButton;

  @NonNull
  public final TextView seeAllMyGroupsButton;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final LinearLayout tapriNav;

  @NonNull
  public final LinearLayout tipsNav;

  private ActivityGroupsBinding(@NonNull CoordinatorLayout rootView, @NonNull TextView backButton,
      @NonNull LinearLayout createGroupButton, @NonNull RecyclerView discoverGroupsRecyclerView,
      @NonNull ImageView earnButton, @NonNull LinearLayout earnNav,
      @NonNull TextView emptyMessageView, @NonNull LinearLayout emptyStateView,
      @NonNull TextView errorMessageView, @NonNull LinearLayout header,
      @NonNull LinearLayout homeNav, @NonNull LinearLayout infoNav,
      @NonNull LinearLayout linearLayout2, @NonNull ImageView loadingGifView,
      @NonNull RecyclerView myGroupsRecyclerView, @NonNull TextView retryButton,
      @NonNull ImageView searchButton, @NonNull TextView seeAllDiscoverButton,
      @NonNull TextView seeAllMyGroupsButton, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull LinearLayout tapriNav, @NonNull LinearLayout tipsNav) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.createGroupButton = createGroupButton;
    this.discoverGroupsRecyclerView = discoverGroupsRecyclerView;
    this.earnButton = earnButton;
    this.earnNav = earnNav;
    this.emptyMessageView = emptyMessageView;
    this.emptyStateView = emptyStateView;
    this.errorMessageView = errorMessageView;
    this.header = header;
    this.homeNav = homeNav;
    this.infoNav = infoNav;
    this.linearLayout2 = linearLayout2;
    this.loadingGifView = loadingGifView;
    this.myGroupsRecyclerView = myGroupsRecyclerView;
    this.retryButton = retryButton;
    this.searchButton = searchButton;
    this.seeAllDiscoverButton = seeAllDiscoverButton;
    this.seeAllMyGroupsButton = seeAllMyGroupsButton;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.tapriNav = tapriNav;
    this.tipsNav = tipsNav;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_groups, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      TextView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.createGroupButton;
      LinearLayout createGroupButton = ViewBindings.findChildViewById(rootView, id);
      if (createGroupButton == null) {
        break missingId;
      }

      id = R.id.discoverGroupsRecyclerView;
      RecyclerView discoverGroupsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (discoverGroupsRecyclerView == null) {
        break missingId;
      }

      id = R.id.earnButton;
      ImageView earnButton = ViewBindings.findChildViewById(rootView, id);
      if (earnButton == null) {
        break missingId;
      }

      id = R.id.earnNav;
      LinearLayout earnNav = ViewBindings.findChildViewById(rootView, id);
      if (earnNav == null) {
        break missingId;
      }

      id = R.id.emptyMessageView;
      TextView emptyMessageView = ViewBindings.findChildViewById(rootView, id);
      if (emptyMessageView == null) {
        break missingId;
      }

      id = R.id.emptyStateView;
      LinearLayout emptyStateView = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateView == null) {
        break missingId;
      }

      id = R.id.errorMessageView;
      TextView errorMessageView = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageView == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.homeNav;
      LinearLayout homeNav = ViewBindings.findChildViewById(rootView, id);
      if (homeNav == null) {
        break missingId;
      }

      id = R.id.infoNav;
      LinearLayout infoNav = ViewBindings.findChildViewById(rootView, id);
      if (infoNav == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.loadingGifView;
      ImageView loadingGifView = ViewBindings.findChildViewById(rootView, id);
      if (loadingGifView == null) {
        break missingId;
      }

      id = R.id.myGroupsRecyclerView;
      RecyclerView myGroupsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (myGroupsRecyclerView == null) {
        break missingId;
      }

      id = R.id.retryButton;
      TextView retryButton = ViewBindings.findChildViewById(rootView, id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.searchButton;
      ImageView searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.seeAllDiscoverButton;
      TextView seeAllDiscoverButton = ViewBindings.findChildViewById(rootView, id);
      if (seeAllDiscoverButton == null) {
        break missingId;
      }

      id = R.id.seeAllMyGroupsButton;
      TextView seeAllMyGroupsButton = ViewBindings.findChildViewById(rootView, id);
      if (seeAllMyGroupsButton == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.tapriNav;
      LinearLayout tapriNav = ViewBindings.findChildViewById(rootView, id);
      if (tapriNav == null) {
        break missingId;
      }

      id = R.id.tipsNav;
      LinearLayout tipsNav = ViewBindings.findChildViewById(rootView, id);
      if (tipsNav == null) {
        break missingId;
      }

      return new ActivityGroupsBinding((CoordinatorLayout) rootView, backButton, createGroupButton,
          discoverGroupsRecyclerView, earnButton, earnNav, emptyMessageView, emptyStateView,
          errorMessageView, header, homeNav, infoNav, linearLayout2, loadingGifView,
          myGroupsRecyclerView, retryButton, searchButton, seeAllDiscoverButton,
          seeAllMyGroupsButton, swipeRefreshLayout, tapriNav, tipsNav);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
